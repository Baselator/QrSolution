@page "/generate"  
@using QrCodeGeneratorLibrary  
@inject QrCodeGenerator qrCodeGenerator  

<h3>QR Code Generator</h3>  

<div>
    <!-- Input field for the user to enter data, bound to the 'data' property -->
    <InputText @bind-Value="data" placeholder="Enter data" class="form-control" />
    <button @onclick="GenerateCode" class="btn btn-primary mt-2">Generate</button>
</div>

@if (!string.IsNullOrEmpty(qrCodeImage))
{
    <div class="mt-3">
        <h4>Generated QR Code:</h4>
        <!-- Displays the generated QR code image if qrCodeImage is not empty -->
        <img src="@qrCodeImage" alt="QR Code" />
    </div>
}

@code {
    
    private string data;  // Stores the current data input by the user
    private string qrCodeImage;  // Stores the base64-encoded PNG image data for the QR code

    private void GenerateCode()
    {
            try
            {
                // Generate the QR code and get the resulting byte array
                byte[] qrCodeBytes = qrCodeGenerator.GenerateQrCode(data);

                // Convert the byte array to a base64 string for display in an <img> tag
                qrCodeImage = "data:image/png;base64," + Convert.ToBase64String(qrCodeBytes);
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error generating QR code: {ex.Message}");
            }
    }
}
